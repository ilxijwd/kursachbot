import os

from src.bot import tb
from src.db import session, Person, Student


@tb.message_handler(commands=['dept'])
def dept_command(msg):
    person = session.query(Person).filter(Person.telegram_id == msg.chat.id).first()
    if not person:
        return tb.send_message(msg.chat.id, "–í–∏ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ")

    args = msg.text.split()[1:]
    if len(args) == 1:
        if args[0] == 'list':
            if not person.head:
                return tb.reply_to(msg, "–£ –≤–∞—Å –Ω–µ–º–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏")

            students_with_dept = session.query(Student).filter(Student.has_debt).all()

            if len(students_with_dept) > 0:
                return tb.send_message(
                    msg.chat.id,
                    "–°—Ç—É–¥–µ–Ω—Ç–∏ —è–∫—ñ –º–∞—é—Ç—å –±–æ—Ä–≥:\n"
                    f"{os.linesep.join((f'{i + 1}. {student.person.fullname}' for (i, student) in enumerate(students_with_dept)))}",
                    parse_mode='Markdown'
                )
            else:
                return tb.send_message(msg.chat.id, "–ù–µ–º–∞—î —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –∑ –±–æ—Ä–≥–æ–º")
        else:
            return tb.send_message(msg.chat.id, "–ù–µ–∑–Ω–∞–π–æ–º–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç, –¥–æ—Å—Ç—É–ø–Ω—ñ: <list>")

    if person.head:
        return tb.send_message(msg.chat.id, "–£ –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –±–æ—Ä–≥—É üòÇ")

    tb.send_message(
        msg.chat.id,
        "–£ –≤–∞—Å —î –±–æ—Ä–≥ –ø–æ –ø—Ä–∞–∫—Ç–∏—Ü—ñ" if person.student.has_debt else '–£ –≤–∞—Å –Ω–µ–º–∞—î –±–æ—Ä–≥—É –ø–æ –ø—Ä–∞–∫—Ç–∏—Ü—ñ'
    )
