import os

from telebot.types import ForceReply

from src.bot import tb
from src.db import session, Person, Student, PlaceOfPractice


@tb.message_handler(commands=['schedule'])
def schedule_command(msg):
    person = session.query(Person).filter(Person.telegram_id == msg.chat.id).first()
    if not person:
        return tb.send_message(msg.chat.id, "–í–∏ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ")

    args = msg.text.split()[1:]
    if len(args) == 1:
        if args[0] == 'change':
            if person.student:
                return tb.send_message(msg.chat.id, "–í —Ç–µ–±–µ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏! üò°")

            return tb.send_message(msg.chat.id, "–û—á—ñ–∫—É—é —Ñ–∞–π–ª —Ä–æ–∑–∫–ª–∞–¥—É", reply_markup=ForceReply(selective=False))
        elif args[0] == 'show':
            schedule = None

            if person.student:
                schedule = person.student.group.faculty.schedule
            elif person.head:
                schedule = person.head.faculty.schedule

            if not schedule:
                return tb.send_message(msg.chat.id, "–†–æ–∑–∫–ª–∞–¥—É –ø–æ–∫–∏ —â–æ –Ω–µ–º–∞—î üò¢")

            return tb.send_message(
                msg.chat.id,
                f"–†–æ–∑–∫–ª–∞–¥ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ–π –≤—ñ–¥ *{schedule.created_date.strftime('%Y-%m-%d')}*:\n\n"
                "\n".join((
                    f"*–î–∞—Ç–∞*\n"
                    f"{schedule_meeting.meeting.date}\n"
                    f"*–ß–∞—Å –ø–æ—á–∞—Ç–∫—É*\n"
                    f"{schedule_meeting.meeting.start_time}\n"
                    f"*–ß–∞—Å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è*\n"
                    f"{schedule_meeting.meeting.end_time}\n"
                    f"*–ú—ñ—Å—Ü–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è*\n"
                    f"{schedule_meeting.meeting.place}\n" for schedule_meeting in schedule.schedule_meetings
                )),
                parse_mode='Markdown'
            )

    return tb.send_message(msg.chat.id, "–ù–µ–∑–Ω–∞–π–æ–º–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç, –¥–æ—Å—Ç—É–ø–Ω—ñ: <change>, <show>")
